services:
  redis_alilmhub:
    image: redis:7
    container_name: redis_alilmhub_prod
    ports:
      - "6381:6379"
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    networks: 
      - alilmhub_network
  alilmhub-backend:
    build:
      context: ./alilmhub_backend
      dockerfile: Dockerfile.prod
    container_name: alilmhub-backend_prod
    ports:
      - "5013:5013"
    env_file:
      - ./alilmhub_backend/.env.production
    volumes:
      - ./logs:/logs
    depends_on:
      redis_alilmhub:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    restart: always
    environment:
      - NODE_ENV=production
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    # Limit container logs to prevent unbounded growth
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - alilmhub_network
  # Elasticsearch service
  elasticsearch:
    image: elasticsearch:7.9.2
    container_name: elasticsearch_alilmhub_prod
    restart: always
    ports:
      - "9200:9200"
    environment:
      - "ES_JAVA_OPTS=-Xms2048m -Xmx2048m"
      - "discovery.type=single-node"
      - "xpack.security.enabled=false"
    volumes:
      - elasticsearch_data_prod:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks: 
      - alilmhub_network

  # Kibana Service
  kibana:
    image: kibana:7.9.2
    container_name: kibana_alilmhub_prod
    restart: always
    depends_on: 
      - elasticsearch 
    ports: 
      - "5601:5601"
    environment:
      - "ELASTICSEARCH_HOSTS=http://elasticsearch:9200" 
    networks: 
      - alilmhub_network

volumes:
  elasticsearch_data_prod:

networks:
  alilmhub_network:
    driver: bridge